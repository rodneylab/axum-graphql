name: Rust
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
permissions: read-all
env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: 1.89
  RUSTFLAGS: "-Dwarnings -Cinstrument-coverage"
  LLVM_PROFILE_FILE: "axum_graphql-%p-%m.profraw"
  SQLX_VERSION: 0.8.6
  SQLX_FEATURES: "rustls,sqlite"
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-telemetry: true
      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install -y libxdo-dev sqlite3
      - name: Cache sqlx-cli
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-sqlx
        with:
          path: ~/.cargo/bin/sqlx ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: cargo install sqlx-cli --force --version=${{ env.SQLX_VERSION}} --features=${{ env.SQLX_FEATURES}} --no-default-features
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Migrate database
        run: ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        run: cargo sqlx prepare --check -- --bin axum-graphql
      - name: Run tests
        run: cargo test
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-telemetry: true
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          components: rustfmt
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Enforce formatting
        run: cargo fmt --check
  fmt-dprint:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dprint/check@9cb3a2b17a8e606d37aae341e49df3654933fc23 # v2.3
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-telemetry: true
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install sqlite3 -y
      - name: Cache sqlx-cli
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-sqlx
        with:
          path: ~/.cargo/bin/sqlx ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          components: clippy
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: cargo install sqlx-cli --force --version=${{ env.SQLX_VERSION }} --features=${{ env.SQLX_FEATURES }} --no-default-features
      - name: Migrate database
        run: ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        run: cargo sqlx prepare --check -- --bin axum-graphql
      - name: Linting
        run: cargo clippy -- -D warnings
  beta:
    runs-on: ubuntu-latest
    name: ubuntu / beta
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Linux Dependencies
        run: sudo apt-get update
      - name: Install beta
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          toolchain: beta
      - name: cargo beta check
        run: cargo check
  msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        msrv: ["1.86.0"]
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install Linux Dependencies
        run: sudo apt-get update
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check
  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-telemetry: true
      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install sqlite3 -y
      - name: Cache sqlx-cli
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        id: cache-sqlx
        with:
          path: / ~/.cargo/bin/sqlx ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable
        with:
          components: llvm-tools
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - name: Install sqlx-cli
        if: steps.cache-sqlx.outputs.cache-hit == false
        run: cargo install sqlx-cli --force --version=${{ env.SQLX_VERSION}} --features=${{ env.SQLX_FEATURES}} --no-default-features
      - name: Install grcov
        run: cargo install grcov
      - name: Migrate database
        run: ./scripts/init_db.sh
      - name: Check sqlx-data.json is up-to-date
        run: cargo sqlx prepare --check -- --bin axum-graphql
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
      - name: Generate code coverage
        run: grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o ./target/debug/
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: ./target/debug/lcov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Machete
        uses: bnjbvr/cargo-machete@b54422fa3319b3cac180f6030b663fe57af51635 # v0.8.0
